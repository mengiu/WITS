package org.services.layer.wits.services.rules
dialect "mvel"
import org.services.layer.wits.services.model.SecondLevelControlPosition;
import org.services.layer.wits.services.model.StatusReturnAnswer;
import org.services.layer.wits.services.drools.DroolsConstants;
import org.persistence.layer.wits.enumusertypes.WamatObjectStatusType;

rule "PositionEvaluationRule_1"
    
	when
		la: SecondLevelControlPosition((!isObjectMovedAnContainerUnit() && isDuplicateWamatObject()) ||
		(isObjectMovedAnContainerUnit() && isDuplicateContainingUnit()))
	then
		la.setStatusReturnAnswer( StatusReturnAnswer.WARNING );
		if (!la.isObjectMovedAnContainerUnit() && la.isDuplicateWamatObject()){
         la.setMessageErrorRet(DroolsConstants.RWMO_WAMAT_OBJECT_DUPLICATE);
        } else { 
         la.setMessageErrorRet(DroolsConstants.RWMO_CONTAINER_UNIT_DUPLICATE);
        }
end

rule "PositionEvaluationRule_2"
    
	when
		la: SecondLevelControlPosition(!(
		containingUnitDest.getContainingUnitTypeSt().getMaxXPosition().intValue()>=objectCoordinate.getCoordinateXYZ().get("X").intValue()
		&& containingUnitDest.getContainingUnitTypeSt().getMaxYPosition().intValue()>=objectCoordinate.getCoordinateXYZ().get("Y").intValue()
		&& containingUnitDest.getContainingUnitTypeSt().getMaxZPosition().intValue()>=objectCoordinate.getCoordinateXYZ().get("Z").intValue()
		))
	then
		la.setStatusReturnAnswer( StatusReturnAnswer.ERROR );
        la.setMessageErrorRet(DroolsConstants.RWMO_COORDINATE_OUT_OF_BOUND);
end

rule "PositionEvaluationRule_3"
    
	when
		la: SecondLevelControlPosition( !getStatusReturnAnswer().equals(StatusReturnAnswer.ERROR) &&
		(!isDuplicateAdmitted() && isDuplicateCoordinate()))
	then
		la.setStatusReturnAnswer( StatusReturnAnswer.ERROR );
        la.setMessageErrorRet(DroolsConstants.RWMO_COORDINATE_DUPLICATE);
end

rule "PositionEvaluationRule_4"
    
	when
		la: SecondLevelControlPosition
		( 
		 !getStatusReturnAnswer().equals(StatusReturnAnswer.ERROR) &&
		 !isObjectMovedInAllowedState()
		)
	then
		la.setStatusReturnAnswer( StatusReturnAnswer.ERROR );
        la.setMessageErrorRet(DroolsConstants.RWMO_INVALID_WAMAT_STATUS);
end
rule "PositionEvaluationRule_5"
    
	when
		la: SecondLevelControlPosition( !getStatusReturnAnswer().equals(StatusReturnAnswer.ERROR) &&
		(isObjectMovedAnContainerUnit() && isContainerUnitImmovable()))
	then
		la.setStatusReturnAnswer( StatusReturnAnswer.ERROR );
        la.setMessageErrorRet(DroolsConstants.RWMO_WAMAT_ERROR_CONTAINER_IMMOVABLE);
end
/*rule "PositionEvaluationRule_6"
    
	when
		la: SecondLevelControlPosition( !getStatusReturnAnswer().equals(StatusReturnAnswer.ERROR) &&
		!isObjectMovedAnObjectRequestedBySameOperationalGroup())
	then
		la.setStatusReturnAnswer( StatusReturnAnswer.ERROR );
        la.setMessageErrorRet(DroolsConstants.RWMO_BARCODE_IS_NOT_IN_LIST_BARCODE);
end*/

